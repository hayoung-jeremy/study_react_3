{"version":3,"sources":["fbase.js","components/Haweet.js","components/HaweetFacotry.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Haweet","haweetObj","isOwner","useState","editing","setEditing","text","newHaweet","setNewHaweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","className","onSubmit","event","preventDefault","console","log","update","type","value","required","autoFocus","onChange","target","onClick","src","alt","icon","faTrash","faPencilAlt","HaweetFactory","userObj","haweet","setHaweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","placeholder","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","haweets","setHaweets","useEffect","onSnapshot","snapshot","haweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyHaweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb708e8a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// For Firebase JavaScript SDK v7.20.0 and later, `measurementId` is an optional field\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Auth.js 에서 직접 firebase 의 auth 를 써야하기 때문 :\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Haweet = ({ haweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newHaweet, setNewHaweet] = useState(haweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure want to delete this hawwet?\");\r\n    if (ok) {\r\n      //delete\r\n      await dbService.doc(`haweets/${haweetObj.id}`).delete();\r\n      await storageService.refFromURL(haweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewHaweet(value);\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(haweetObj, newHaweet);\r\n    dbService.doc(`haweets/${haweetObj.id}`).update({\r\n      text: newHaweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              value={newHaweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Haweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4> {haweetObj.text} </h4>\r\n          {haweetObj.attachmentUrl && (\r\n            <img src={haweetObj.attachmentUrl} alt=\"\" />\r\n          )}\r\n          {/* 작성자일 경우에만 tweet 편집 및 삭제 가능 */}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Haweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HaweetFactory = ({ userObj }) => {\r\n  const [haweet, setHaweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (haweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      // first create the ref to the file, and update with some contents\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const haweetObj = {\r\n      text: haweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    // photo && then haweet\r\n    await dbService.collection(\"haweets\").add(haweetObj);\r\n    setHaweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setHaweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n          value={haweet}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default HaweetFactory;\r\n","// main page\r\n\r\nimport Haweet from \"components/Haweet\";\r\nimport HaweetFactory from \"components/HaweetFacotry\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [haweets, setHaweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"haweets\").onSnapshot((snapshot) => {\r\n      const haweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setHaweets(haweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <HaweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {haweets.map((haweet) => (\r\n          <Haweet\r\n            key={haweet.id}\r\n            haweetObj={haweet}\r\n            isOwner={haweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    try {\r\n      let data;\r\n      // 새 계정 생성인지, 로그인인지\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","// login page\r\n\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","// showing profile page\r\n\r\nimport { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyHaweets = async () => {\r\n    const haweets = await dbService\r\n      .collection(\"haweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(haweets.docs.map((doc) => doc.data()));\r\n  };\r\n  useEffect(() => {\r\n    getMyHaweets();\r\n  });\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update profile\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn ? (\r\n            // login 함 :\r\n            <div\r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            // Login 안함 :\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  // user 의 로그인, 로그아웃 상태 확인\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      // listening for the change :\r\n      // 1) user logged in\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  // user 를 새로고침해주는 함수\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    console.log(authService.currentUser.displayName);\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"Initializing ...\"\r\n      )}\r\n      <footer> &copy; Hawitter {new Date().getFullYear()} </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}